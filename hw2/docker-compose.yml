version: '3.8'

services:
  storing-db:
    image: postgres:16-alpine
    container_name: storing-db
    environment:
      POSTGRES_DB: storing_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - storing-db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  analysis-db:
    image: postgres:16-alpine
    container_name: analysis-db
    environment:
      POSTGRES_DB: analysis_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - analysis-db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      file-storing-service:
        condition: service_healthy
      file-analysis-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  file-storing-service:
    build:
      context: .
      dockerfile: file_storing_service/Dockerfile
    container_name: file-storing-service
    ports:
      - "8081:8081"
      - "9091:9091"
    depends_on:
      storing-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://storing-db:5432/storing_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      FILE_STORAGE_PATH: /app/files
    volumes:
      - file-storage-data:/app/files
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  file-analysis-service:
    build:
      context: .
      dockerfile: file_analisys_service/Dockerfile
    container_name: file-analysis-service
    ports:
      - "8082:8082"
      - "9092:9092"
    depends_on:
      analysis-db:
        condition: service_healthy
      file-storing-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://analysis-db:5432/analysis_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      FILE_STORING_SERVICE_URL: file-storing-service:9091
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  storing-db-data:
  analysis-db-data:
  file-storage-data: